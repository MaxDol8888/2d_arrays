#Hapilin
def swap(i,j):
    for z in range(n):
        sp[z][i],sp[z][j]=sp[z][j],sp[z][i]
    for row in sp:
        for stol in row:
            print(stol, end=" ")
        print(" ")

n, m = [int(i) for i in input().split()]
sp=[[int(j) for j in input().split()] for z in range(n)]
i, j = [int(k) for k in input().split()]
swap(i,j)


def swap_columns(a, i, j):
    for k in range(len(a)):
        a[k][i], a[k][j] = a[k][j], a[k][i]

n, m = [int(i) for i in input().split()]
a = [[int(j) for j in input().split()] for i in range(n)]
i, j = [int(i) for i in input().split()]
swap_columns(a, i, j)
print('\n'.join([' '.join([str(i) for i in row]) for row in a]))



#Alina
n, m = [int(i) for i in input().split()]
a = [[int(j) for j in input().split()] for i in range(n)]
i, j = [int(i) for i in input().split()]
for x in range(m):
    a[x][i],a[x][j] = a[x][j],a[x][i]
for row in a:
    print(' '.join([str(a) for a in row]))


#Sidorov
from random import randrange
def swap_columns(a, i, j):
    for row in a:
        row[i], row[j] = row[j], row[i]
    return a

n, m = [int(k) for k in input().split()]
a = [[randrange(1, 10) for i in range(m)] for j in range(n)]

for row in a:
    print(' '.join([str(elem) for elem in row]))
    
i, j = [int(k) for k in input().split()]

for row in swap_columns(a, i, j):
    print(' '.join([str(i) for i in row]))


