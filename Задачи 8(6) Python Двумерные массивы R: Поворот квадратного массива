#Netyaga
def Rotate(n,m):
    #k = [[int(input()) for i in range(m)] for j in range(n)]
    k = [[int(i) for i in input().split()] for j in range(n)]
    k = list(zip(*reversed(k)))
    return(k)

kk = Rotate(int(input()), int(input()))
for i in range(len(kk)):
    print(*kk[i])
    
    
#Hapilin
def rotate(sp):
    sp1 = []
    for k in range(n):
        sp1.append([])
    r = int(0)
    c = int(0)
    while r < n:
        while c < n:
            sp1[r].append(sp[c][r])
            c += 1
        c = int(0)
        r+=1
    for strok in range(len(sp1)):
        sp1[strok] = sp1[strok][::-1]
    for kok in sp1:
        print(*kok)
n = int(input())
sp = [[i for i in input().split()] for j in range(n)]
rotate(sp)


### http://www.cyberforum.ru/python/thread1672515.html
# For QUAD

from random import randrange
a=[]
N=int(input('Введите количство строк и столбцов в матрице: '))

'''for i in range (N):
    a.append([])
    for m in range (N):
        k=int(input('Введите число a[%d][%d]: '%(i+1,m+1)))
        a[i].append(k)
print('\nИсходная матрица: ')
for i in range (N):
    print(a[i])'''


a = [[randrange(1, 10) for i in range(N)] for j in range(N)] 
for row in a:
    print(' '.join([str(elem) for elem in row]))
print()
for j in range(N - 1, -1, -1):
    for i in a:
        print(i[j], end=" ")
    print()
    
print()

for row in a:
    print(' '.join([str(elem) for elem in row]))

