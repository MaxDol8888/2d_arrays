#Hapilin
def IsSymmetric(n):
    sp = [[int(j) for j in input().split()] for i in range(n)]
    schet = int(0)
    for k in range(n):
        for z in range(n):
            if sp[k][z] == sp[z][k] and k!=z:
                schet += 1
    print(schet)
    return(schet)
n=int(input())
if IsSymmetric(n) == n*n - n:
    print("YES")
else:
    print("NO")
    
    
#Gura
def IsSymmetric(n, A):
    k = []
    k1 = []
    for i in range(n-1):
        k.append(A[i][(i+1):])
    for i in range(n-1):
        k1.append(A[-(i+1)][:-(i+1)])
    las = [k1[0][-1]]
    k1.reverse()
    for i in range(len(k1)):
        for j in range(n-2):
            k1[i].append('*')
    kk = list(map(list,zip(*k1)))
    kk.append(las)
    for i in kk:
        for j in range(i.count('*')):
            kk[kk.index(i)].remove('*')
    if (len(kk[-1]) == 1) and (len(kk[-2]) == 1):
        kk.pop(-1)
    if kk == k:
        return(True)
    else:
        return(False)
n = int(input())
#A = [[int(input()) for i in range(n)] for j in range(n)]
A = [[int(i) for i in input().split()] for j in range(n)]
print(IsSymmetric(n, A))


#Netyaga
def IsSymmetric(n, A):
    k = []
    k1 = []
    for i in range(n-1):
        k.append(A[i][(i+1):])
    for i in range(n-1):
        k1.append(A[-(i+1)][:-(i+1)])
    las = [k1[0][-1]]
    k1.reverse()
    for i in range(len(k1)):
        for j in range(n-2):
            k1[i].append('*')
    kk = list(map(list,zip(*k1)))
    kk.append(las)
    for i in kk:
        for j in range(i.count('*')):
            kk[kk.index(i)].remove('*')
    if (len(kk[-1]) == 1) and (len(kk[-2]) == 1):
        kk.pop(-1)
    if kk == k:
        return(True)
    else:
        return(False)
n = int(input())
#A = [[int(input()) for i in range(n)] for j in range(n)]
A = [[int(i) for i in input().split()] for j in range(n)]
print(IsSymmetric(n, A))


#Soroka
import random
def IsSymmetric(A):
    b=[]
    r=-1
    for i in range(n-1,-1,-1):
        r+=1
        b.append(A[r][i])
    for i in range(1,len(b),1):
        if(b[i]==b[i-1]):
            continue
        else:
            return False
    return True
n=random.randint(3,6)
print("n =",n)
A=[]
for i in range(n):
    s=input()
    A.append(s.split(' '))
if(IsSymmetric(A)):
    print("YES")
else:
    print("NO")
    
    
