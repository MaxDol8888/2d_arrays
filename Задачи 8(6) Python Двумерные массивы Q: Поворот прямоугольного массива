#Hapilin V.1.0 (nedorabotan!)
a = []
m = int(input())
n = int(input())
a = [[int(i) for i in input().split()] for j in range(m)]
for i in range(m):
    for j in range(n):
        if j>i:
            t = a[i][j]
            a[i][j] = a[j][i]
            a[j][i] = t
for row in a:
    print(*row)


#Hapilin V.2.0
def rotate(sp):
    sp1 = []
    for k in range(m):
        sp1.append([])
    r = int(0)
    c = int(0)
    while r < m:
        while c < n:
            sp1[r].append(sp[c][r])
            c += 1
        c = int(0)
        r+=1
    for strok in range(len(sp1)):
        sp1[strok] = sp1[strok][::-1]
    for kok in sp1:
        print(*kok)    
n,m = [int(i) for i in input().split()]
sp = [[i for i in input().split()] for j in range(n)]
rotate(sp)

#Hapilin V.2.0 RAZBOR
def rotate(sp):
    sp1 = []
    for k in range(m):
        sp1.append([])
    print(sp1)###
    r = int(0)
    c = int(0)
    while r < m:
        while c < n:
            sp1[r].append(sp[c][r])
            c += 1
        print(sp1)###
        c = int(0)
        r+=1
    print(sp1)###    
    for strok in range(len(sp1)):
        sp1[strok] = sp1[strok][::-1]
        print(sp1)###
    print(sp1)###    
    for kok in sp1:
        print(*kok)
    print(sp1)###     
n,m = [int(i) for i in input().split()]
sp = [[i for i in input().split()] for j in range(n)]
rotate(sp)
print(*sp)###

#Netyaga
def Rotate(n,m):
#    k = [[int(input()) for i in range(m)] for j in range(n)]
    k = [[int(i) for i in input().split()] for j in range(n)]
    k = list(zip(*reversed(k)))
    return(k)

n, m = map(int, input().split())
kk = Rotate(n,m)
#kk = Rotate(int(input()), int(input())
for i in range(len(kk)):
    print(*kk[i])

### Dopolnenie dlia ponimanija ###
n, m = map(int, input().split())
k = [[int(i) for i in input().split()] for j in range(n)]
for i in range(len(k)):
    print(*reversed(k[i])) 
# OR #
n, m = map(int, input().split())
k = [[int(i) for i in input().split()] for j in range(n)]
for i in range(len(k)):
    k[i].reverse()
    print(*k[i])
# OR #
k = [2, 4, 5]
k.reverse()
print(*k)
    

### http://www.cyberforum.ru/python-beginners/thread2230591.html

#regio1961
def list_rot90( data, times = 1 ):
    rot_data = []
    for t in range( times ):
        m = len( data )
        n = len( data[0] )
        rev_data = data[ : : -1]
        rot_data = [ [rev_data[j][i] for j in range( m ) ] 
                                     for i in range( n ) ];
        data = rot_data                           
    return rot_data
   
 
matrix = [ [ 8, 2, 3 ], 
           [ 9, 5, 4 ] ]
for s in matrix:
    print( *s )  
print( "" )   
rot_matrix = list_rot90( matrix ) 
for s in rot_matrix:
    print( *s )    
print( "" )    
rot_matrix2 = list_rot90( matrix, 2 ) 
for s in rot_matrix2:
    print( *s )

#Black Fregat
def transposed(matrix):
    return [[*col] for col in zip(*matrix)]
 
def rot90:
    return list(map(reversed, transposed(matrix)))

# Или в одно действие
def rot90(matrix):
    return[list(reversed(col)) for col in zip(*matrix)]


### http://www.cyberforum.ru/python/thread1672515.html
# For QUAD

from random import randrange
a=[]
N=int(input('Введите количство строк и столбцов в матрице: '))

'''for i in range (N):
    a.append([])
    for m in range (N):
        k=int(input('Введите число a[%d][%d]: '%(i+1,m+1)))
        a[i].append(k)
print('\nИсходная матрица: ')
for i in range (N):
    print(a[i])'''


a = [[randrange(1, 10) for i in range(N)] for j in range(N)] 
for row in a:
    print(' '.join([str(elem) for elem in row]))
print()
for j in range(N - 1, -1, -1):
    for i in a:
        print(i[j], end=" ")
    print()
    
print()

for row in a:
    print(' '.join([str(elem) for elem in row]))

